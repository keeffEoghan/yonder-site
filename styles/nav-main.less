.yr-nav {
    /**
     * Switch which side of the view the nav is on.
     *
     * @param side {String}
     * @param size {Length}
     */
    .align-nav(@side, @size) when (@side = left) {
        left: @size;

        .tweak-yr-nav-align-switch & {
            right: @size;
            left: auto;
        }
    }
    .align-nav(@side, @size) when (@side = right) {
        right: @size;

        .tweak-yr-nav-align-switch & {
            left: @size;
            right: auto;
        }
    }


    /**
     * Nav buttons
     */

    .yr-nav-button,
    .yr-nav-toggler {
        position: fixed;
        top: @tweak-yr-nav-button-offset;
    }

    .yr-nav-button {
        display: inline-flex;
        flex-flow: row nowrap;
        justify-content: center;
        align-items: center;
        min-width: @yr-hit-min-size;
        min-height: @yr-hit-min-size;
        width: @tweak-yr-nav-button-size;
        height: @tweak-yr-nav-button-size;
        background-size: @tweak-yr-nav-button-size;
        transition: opacity 300ms @ease-fade;
        color: @tweak-yr-nav-button-color;

        &.yr-nav-toggle-close {
            color: @tweak-yr-nav-button-close-color;
        }

        .yr-inline-svg {
            width: @tweak-yr-nav-button-size;
            height: @tweak-yr-nav-button-size;
        }
    }

    .yr-nav-home-a {
        z-index: @yr-z-nav-home;
        width: @tweak-yr-nav-home-size;
        height: @tweak-yr-nav-home-size;
        background-size: @tweak-yr-nav-home-size;

        .align-nav(left, @tweak-yr-nav-home-offset);

        .homepage & {
            opacity: 0;
            pointer-events: none;
        }

        .yr-inline-svg {
            width: @tweak-yr-nav-home-size;
            height: @tweak-yr-nav-home-size;
        }

        /**
         * Whether to show a custom background image, or the default embedded SVG.
         */
        .tweak-yr-nav-home-custom & {
            .tweak-yr-nav-home-image;

            .yr-inline-svg {
                display: none;
            }
        }
    }

    .yr-nav-toggler,
    .yr-nav-toggle {
        .align-nav(right, @tweak-yr-nav-button-offset);
    }

    .yr-nav-toggler {
        /**
         * Need to do the `max` size this way, because `<input>` doesn't
         * respect `min-width`/`min-height` properly.
         * (Can't believe this is a LESS `if`/`else`...)
         */
        @button-size: @tweak-yr-nav-button-size;

        .button-size() when (@yr-hit-min-size > @tweak-yr-nav-button-size) {
            @button-size: @yr-hit-min-size;
        }
        .button-size;

        width: @button-size;
        height: @button-size;

        z-index: @yr-z-nav-toggler;
        opacity: 0;
        cursor: pointer;
        margin: 0;
        padding: 0;
        border: none;
    }

    .yr-nav-toggle {
        z-index: @yr-z-nav-toggle;
    }

    .yr-nav-toggle-open {
        /**
         * Whether to show a custom background image, or the default embedded SVG.
         */
        .tweak-yr-nav-toggle-open-custom & {
            .tweak-yr-nav-toggle-image-open;

            .yr-inline-svg {
                display: none;
            }
        }
    }

    .yr-nav-toggle-close {
        /**
         * Whether to show a custom background image, or the default embedded SVG.
         */
        .tweak-yr-nav-toggle-close-custom & {
            .tweak-yr-nav-toggle-image-close;

            .yr-inline-svg {
                display: none;
            }
        }
    }


    /**
     * Nav menu
     */

    .yr-nav-panel {
        display: flex;
        flex-flow: column nowrap;
        justify-content: center;
        align-items: center;
        position: fixed;
        top: 0;
        bottom: 0;
        width: 100%;
        max-width: 40em;
        z-index: @yr-z-nav;
        padding: 3em;
        color: @tweak-yr-nav-text-color;
        background-color: @tweak-yr-nav-background-color;
        text-align: center;
        overflow: hidden;
        transition: transform 300ms @ease-slide 200ms;

        .align-nav(left, 100%);
    }

    .yr-nav-header {
        width: 100%;
        margin-bottom: 2em;
    }

    .yr-site-title {
        display: none;

        .tweak-yr-nav-main-site-title-show & {
            display: block;
        }
    }

    .yr-site-tagline {
        display: none;
        font-weight: normal;

        .tweak-yr-nav-main-site-tagline-show & {
            display: block;
        }
    }

    .yr-site-description {
        display: none;
        font-weight: normal;

        .tweak-yr-nav-main-site-description-show & {
            display: block;
        }
    }

    .yr-site-title-a {
        display: block;
        text-decoration: none;
    }

    .yr-nav-links {
        font-size: 1.1em;
        flex: 0 1 auto;
        width: 100%;
        min-height: 2em;
        margin: auto;
        overflow-y: auto;
        font-weight: bolder;
    }

    .yr-nav-folder-links {
        background-color: @tweak-yr-nav-folder-divide-color;
    }

    .yr-nav-folder-a {
        border-bottom: 2px dashed @tweak-yr-nav-folder-divide-color;
    }

    .yr-nav-a {
        display: block;

        &::after {
            display: none;
        }
    }

    .yr-nav-footer-block {
        margin-top: 2em;
        font-size: 0.8em;
    }

    /**
     * Animation
     */

    .fade-loop(@n, @start, @gap) when (@n > 0) {
        .fade-loop((@n - 1), @start, @gap);

        &:nth-child(@n) {
            transition-delay: @start + ((@n - 1) * @gap);
        }
    }

    .yr-nav-fade {
        opacity: 0;
        transition: opacity 200ms @ease-fade;
        .fade-loop(5, 0ms, 100ms);
    }


    /**
     * Toggle state
     */

    .yr-nav-toggler:checked + .yr-nav-panel {
        transform: translateX(-100%);
        transition-delay: 0ms;

        .tweak-yr-nav-align-switch & {
            transform: translateX(100%);
        }

        .yr-nav-fade {
            opacity: 1;
            .fade-loop(5, 300ms, 100ms);
        }
    }
}
