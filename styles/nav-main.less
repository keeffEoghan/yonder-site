.yr-nav {
    position: relative;

    /**
     * The bar and its floating background.
     * Setting it up as a detached backdrop element allows the nav bar itself to stay in
     * document flow and push any following elements down by the appropriate amount naturally,
     * While this pseudo-element scrolls fixed to the window outside of document flow.
     */
    &,
    &::before {
        width: 100%;
        height: @tweak-yr-nav-button-size;
        min-height: @tweak-yr-nav-home-size;
        padding: @tweak-yr-nav-button-offset;
        z-index: @yr-z-nav;
    }

    &::before {
        content: '';
        display: block;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        background-color: @tweak-yr-color-accent-1-tone-2;
        .transform-origin(top center);
        .transition(opacity 300ms ease-in);

        .yr-color-theme-1 & {
            background-color: @tweak-yr-color-theme-1-tone-2;
        }

        .yr-color-theme-2 & {
            background-color: @tweak-yr-color-theme-2-tone-2;
        }

        .yr-color-theme-3 & {
            background-color: @tweak-yr-color-theme-3-tone-2;
        }

        .yr-color-theme-4 & {
            background-color: @tweak-yr-color-theme-4-tone-2;
        }

        .yr-color-theme-5 & {
            background-color: @tweak-yr-color-theme-5-tone-2;
        }
    }

    .homepage & {
        min-height: 0;
        height: 0;
        padding: 0;

        &::before {
            opacity: 0;
            pointer-events: none;
        }
    }


    /**
     * Switch which side of the view the nav is on.
     *
     * @param size {Length}
     */
    .align-nav-left(@size) {
        left: @size;

        .tweak-yr-nav-align-switch & {
            right: @size;
            left: auto;
        }
    }
    .align-nav-right(@size) {
        right: @size;

        .tweak-yr-nav-align-switch & {
            left: @size;
            right: auto;
        }
    }

    /**
     * Same as `.align-view`, but for center-anchored elements.
     *
     * @param size {Length}
     */
    .align-nav-left-mid(@size) {
        .align-nav-left(@size);
        .transform(translate(-50%, -50%));

        .tweak-yr-nav-align-switch & {
            .transform(translate(50%, -50%));
        }
    }
    .align-nav-right-mid(@size) {
        .align-nav-right(@size);
        .transform(translate(50%, -50%));

        .tweak-yr-nav-align-switch & {
            .transform(translate(-50%, -50%));
        }
    }


    /**
     * Nav buttons
     */

    .yr-nav-button,
    .yr-nav-toggler {
        position: fixed;
        top: @tweak-yr-nav-button-offset;
    }

    .size-nav(@size) {
        width: @size;
        height: @size;
        background-size: @size;

        .yr-inline-svg {
            width: @size;
            height: @size;
        }
    }

    .yr-nav-button {
        min-width: @yr-size-hit-min;
        min-height: @yr-size-hit-min;
        background-position: center;
        color: @tweak-yr-color-light-1-tone-3;
        will-change: opacity;
        @transition: opacity 300ms @yr-ease-fade;
        .transition(@transition);

        &:hover,
        &:focus {
            color: @tweak-yr-color-light-1-tone-1;
            @transition: opacity 100ms @yr-ease-fade;
            .transition(@transition);
        }
    }

    .homepage & > .yr-nav-button {
        color: @tweak-yr-color-accent-1-tone-1;

        &:hover,
        &:focus {
            color: @tweak-yr-color-accent-1-tone-3;
        }
    }

    .yr-svg-shape{
        fill: currentColor;
        @transition: color 300ms @yr-ease-fade;
        .transition(@transition);
    }

    .yr-nav-home-a {
        z-index: @yr-z-nav-home;
        .align-nav-left-mid(@tweak-yr-nav-button-offset);
        .size-nav(@tweak-yr-nav-home-size);

        .homepage & {
            opacity: 0;
            pointer-events: none;
        }
    }

    .yr-nav-toggler,
    .yr-nav-toggle {
        .align-nav-right-mid(@tweak-yr-nav-button-offset);
        .size-nav(@tweak-yr-nav-button-size);
    }

    .yr-nav-toggler {
        /**
         * Need to do the `max` size this way, because `<input>` doesn't
         * respect `min-width`/`min-height` properly.
         */
        @button-size: max(@yr-size-hit-min, @tweak-yr-nav-button-size);

        width: @button-size;
        height: @button-size;

        z-index: @yr-z-nav-toggler;
        opacity: 0;
        cursor: pointer;
        margin: 0;
        padding: 0;
        border: none;

        &:hover,
        &:focus {
            ~ .yr-nav-toggle,
            ~ .yr-nav-panel .yr-nav-toggle {
                color: @tweak-yr-color-light-1-tone-1;
            }

            .homepage & ~ .yr-nav-toggle {
                color: @tweak-yr-color-accent-1-tone-3;
            }
        }
    }

    .yr-nav-toggle {
        z-index: @yr-z-nav-toggle;
    }

    .yr-nav-toggle-close {
        color: @tweak-yr-color-light-1-tone-3;
    }

    @nav-overlay-time: 600ms;

    .yr-nav-overlay {
        position: fixed;
        top: 0;
        right: 0;
        left: 0;
        bottom: 100%;
        z-index: @yr-z-nav-overlay;
        background-color: @tweak-yr-nav-main-overlay-color;
        cursor: pointer;
        opacity: 0;
        pointer-events: none;
        will-change: opacity, bottom;
        @transition: opacity @nav-overlay-time ease-out,
            bottom 0ms linear @nav-overlay-time;
        .transition(@transition);
    }

    .yr-nav-button-icon,
    .yr-nav-button-icon-block {
        width: 100%;
        height: 100%;
    }

    .display-yr-nav-button-icon() {
        .display(inline-flex);
    }

    .yr-nav-button-icon {
        .display-yr-nav-button-icon();
        .flex-flow(row nowrap);
        .justify-content(center);
        .align-items(center);
    }

    .yr-nav-button-icon-block {
        position: absolute;
        top: 0;
        left: 0;

        &@{yr-select-sqs-block-on} {
            & ~ .yr-nav-button-icon {
                display: none;
            }
        }

        &@{yr-select-sqs-block-empty} {
            & ~ .yr-nav-button-icon {
                .display-yr-nav-button-icon();
            }
        }
    }


    /**
     * Nav menu
     */

    @nav-gap: 2.7rem;

    .yr-nav-panel {
        .display(flex);
        .flex-flow(column nowrap);
        .justify-content(flex-start);
        .align-items(center);
        position: fixed;
        top: 0;
        bottom: 0;
        width: 100%;
        max-width: @tweak-yr-nav-main-size-max;
        z-index: @yr-z-nav-panel;
        padding: @nav-gap;
        color: @tweak-yr-color-light-1-tone-3;
        background-color: @tweak-yr-color-accent-1-tone-3;
        text-align: center;
        overflow-y: auto;

        .align-nav-left(100%);
    }

    .yr-nav-header,
    .yr-nav-footer-block {
        width: 100%;
    }

    .yr-nav-header {
        margin-bottom: @nav-gap;
    }

    .yr-nav-footer-block {
        &@{yr-select-sqs-block-on} {
            margin-top: @nav-gap;
        }

        &@{yr-select-sqs-block-empty} {
            margin-top: 0;
        }

        &,
        & p {
            .tweak-yr-font-nav-footer;
        }
    }

    .yr-site-title {
        display: none;
        padding: 0;

        .tweak-yr-nav-main-site-title-show & {
            display: block;
        }
    }

    .yr-site-tagline {
        display: none;
        font-weight: normal;

        .tweak-yr-nav-main-site-tagline-show & {
            display: block;
        }
    }

    .yr-site-description {
        display: none;
        font-weight: normal;

        .tweak-yr-nav-main-site-description-show & {
            display: block;
        }
    }

    .yr-site-title-a {
        display: block;
        text-decoration: none;
    }

    .yr-nav-links,
    .yr-nav-folder-links {
        .display(flex);
        .flex-flow(column nowrap);
        .justify-content(flex-start);
        .align-items(center);
        width: 100%;
        min-height: 2em;
        padding: 0.3em 0;
        margin: auto;
    }

    .yr-nav-links {
        .flex(0 1 auto);
        overflow-y: auto;
        .tweak-yr-font-nav-a;
    }

    .yr-nav-a {
        display: block;
        margin: 0.3em 0;
        border-color: @tweak-yr-color-accent-2-tone-1;

        &::after {
            border-bottom-width: 2px;
            .transform(scaleY(0));
        }

        &.yr-active {
            &::after {
                .transform(scaleY(1));
            }
        }

        [data-mercury-loading] &::after {
            .transform(scaleY(0));
        }
    }

    .yr-nav-folder-a {
        width: 100%;
        border-style: dotted;
        border-color: @tweak-yr-color-accent-1-tone-2;
        margin-bottom: 0;
        will-change: border-color;
        .transition(border-color 500ms ease-out);

        &::after {
            .transform(none);
        }

        &:hover,
        &:focus,
        &:active,
        &.yr-active {
            border-color: @tweak-yr-color-accent-2-tone-1;
            .transition(border-color 200ms ease-out);

            &::after {
                opacity: 1;
            }

            + .yr-nav-folder-links {
                background-color: @tweak-yr-color-accent-2-tone-1;
                .transition(background-color 200ms ease-out);
            }
        }

        [data-mercury-loading] & {
            &::after {
                opacity: 0;
            }

            + .yr-nav-folder-links {
                background-color: transparent;
            }
        }
    }

    .yr-nav-folder-links {
        .flex(0 0 auto);
        background-color: @tweak-yr-color-accent-1-tone-2;
        will-change: background-color;
        .transition(background-color 500ms ease-out);
    }

    /**
     * Animation
     */

    @fades: 5;
    
    .yr-nav-panel {
        will-change: transform;
        .transition(transform 300ms @yr-ease-slide (@fades * 70ms));
    }

    .fade-loop(@n, @start, @gap) when (@n > 0) {
        .fade-loop((@n - 1), @start, @gap);

        &:nth-child(@n) {
            .transition-delay(@start + ((@n - 1) * @gap));
        }
    }

    .yr-nav-fade {
        opacity: 0;
        will-change: opacity;
        .transition(opacity 200ms @yr-ease-fade);
        .fade-loop(@fades, 0ms, 100ms);
    }


    /**
     * Toggle state
     */

    .yr-nav-toggler {
        &:checked {
            ~ .yr-nav-panel {
                .transform(translateX(-100%));
                .transition-delay(0ms);

                .tweak-yr-nav-align-switch & {
                    .transform(translateX(100%));
                }

                .yr-nav-fade {
                    opacity: 1;
                    .fade-loop(5, 300ms, 100ms);
                }
            }

            ~ .yr-nav-overlay {
                opacity: 1;
                bottom: 0;
                pointer-events: all;

                @transition: opacity @nav-overlay-time ease-out,
                    bottom 0ms linear 0ms;
                .transition(@transition);
            }
        }
    }
}
