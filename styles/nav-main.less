.yr-nav {
    display: inline-flex;
    flex-flow: row nowrap;
    justify-content: center;
    align-items: center;
    position: relative;
    flex: 0 0 auto;

    /**
     * The bar and its floating background.
     * Setting it up as a detached backdrop element allows the nav bar itself to stay in
     * document flow and push any following elements down by the appropriate amount naturally,
     * While this pseudo-element scrolls fixed to the window outside of document flow.
     */
    &,
    &::before {
        box-sizing: content-box;
        width: 100%;
        min-height: @yr-size-hit-min;
        z-index: @yr-z-nav;

        /**
         * Lay out the bar to cover the largest button (size + offset).
         */

        @button: max(@tweak-yr-nav-button-size, @yr-size-hit-min) + @tweak-yr-nav-button-offset;
        @home: max(@tweak-yr-nav-home-size, @yr-size-hit-min) + @tweak-yr-nav-home-offset;

        @height: @tweak-yr-nav-button-size;
        @offset: @tweak-yr-nav-button-offset;

        .layout-bar() when (@home > @button) {
            @height: @tweak-yr-nav-home-size;
            @offset: @tweak-yr-nav-home-offset;
        }
        .layout-bar();

        height: @height;
        padding: @offset 0;
    }

    &::before {
        content: '';
        display: block;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        background-color: @tweak-yr-nav-bar-color;
        transform-origin: top center;
        transition: opacity 300ms ease-in;
    }

    .homepage & {
        min-height: 0;
        height: 0;
        padding: 0;

        &::before {
            opacity: 0;
            pointer-events: none;
        }
    }

    /**
     * Switch which side of the view the nav is on.
     *
     * @param side {String}
     * @param size {Length}
     */
    .align-nav(@side, @size) when (@side = left) {
        left: @size;

        .tweak-yr-nav-align-switch & {
            right: @size;
            left: auto;
        }
    }
    .align-nav(@side, @size) when (@side = right) {
        right: @size;

        .tweak-yr-nav-align-switch & {
            left: @size;
            right: auto;
        }
    }


    /**
     * Nav buttons
     */

    .yr-nav-button,
    .yr-nav-toggler {
        position: fixed;
    }

    .size-nav(@size) {
        width: @size;
        height: @size;
        background-size: @size;

        .yr-inline-svg {
            width: @size;
            height: @size;
        }
    }

    .yr-nav-button {
        min-width: @yr-size-hit-min;
        min-height: @yr-size-hit-min;
        background-position: center;
        transition: opacity 300ms @ease-fade;
        color: @tweak-yr-nav-button-color;
        .size-nav(@tweak-yr-nav-button-size);
    }

    .yr-nav-home-a {
        z-index: @yr-z-nav-home;
        top: @tweak-yr-nav-home-offset;
        .align-nav(left, @tweak-yr-nav-home-offset);
        .size-nav(@tweak-yr-nav-home-size);

        .homepage & {
            opacity: 0;
            pointer-events: none;
        }
    }

    .yr-nav-toggler,
    .yr-nav-toggle {
        top: @tweak-yr-nav-button-offset;
        .align-nav(right, @tweak-yr-nav-button-offset);
    }

    .yr-nav-toggler {
        /**
         * Need to do the `max` size this way, because `<input>` doesn't
         * respect `min-width`/`min-height` properly.
         */
        @button-size: max(@yr-size-hit-min, @tweak-yr-nav-button-size);

        width: @button-size;
        height: @button-size;

        z-index: @yr-z-nav-toggler;
        opacity: 0;
        cursor: pointer;
        margin: 0;
        padding: 0;
        border: none;
    }

    .yr-nav-toggle {
        z-index: @yr-z-nav-toggle;
    }

    .yr-nav-toggle-close {
        color: @tweak-yr-nav-button-close-color;
    }

    .yr-nav-button-icon,
    .yr-nav-button-icon-block {
        width: 100%;
        height: 100%;
    }

    @yr-nav-button-icon-display: inline-flex;

    .yr-nav-button-icon {
        display: @yr-nav-button-icon-display;
        flex-flow: row nowrap;
        justify-content: center;
        align-items: center;
    }

    .yr-nav-button-icon-block {
        position: absolute;
        top: 0;
        left: 0;

        &@{yr-select-sqs-block-on} {
            & ~ .yr-nav-button-icon {
                display: none;
            }
        }

        &@{yr-select-sqs-block-empty} {
            & ~ .yr-nav-button-icon {
                display: @yr-nav-button-icon-display;
            }
        }
    }


    /**
     * Nav menu
     */

    .yr-nav-panel {
        display: flex;
        flex-flow: column nowrap;
        justify-content: center;
        align-items: center;
        position: fixed;
        top: 0;
        bottom: 0;
        width: 100%;
        max-width: 40em;
        z-index: @yr-z-nav-panel;
        padding: 3em;
        color: @tweak-yr-nav-text-color;
        background-color: @tweak-yr-nav-panel-color;
        text-align: center;
        overflow: hidden;

        .align-nav(left, 100%);
    }

    .yr-nav-header {
        width: 100%;
        margin-bottom: 2em;
    }

    .yr-site-title {
        display: none;

        .tweak-yr-nav-main-site-title-show & {
            display: block;
        }
    }

    .yr-site-tagline {
        display: none;
        font-weight: normal;

        .tweak-yr-nav-main-site-tagline-show & {
            display: block;
        }
    }

    .yr-site-description {
        display: none;
        font-weight: normal;

        .tweak-yr-nav-main-site-description-show & {
            display: block;
        }
    }

    .yr-site-title-a {
        display: block;
        text-decoration: none;
    }

    .yr-nav-links {
        display: flex;
        flex-flow: column nowrap;
        justify-content: center;
        align-items: center;
        flex: 0 1 auto;
        font-size: 1.1em;
        width: 100%;
        min-height: 2em;
        margin: auto;
        overflow-y: auto;
        font-weight: bolder;
    }

    .yr-nav-folder-links {
        background-color: @tweak-yr-nav-folder-divide-color;
    }

    .yr-nav-folder-a {
        border-bottom: 2px dashed @tweak-yr-nav-folder-divide-color;
    }

    .yr-nav-a {
        margin: 0.3em 0;

        &::after {
            color: @tweak-yr-a-border-color-2;
        }

        &,
        &:visited,
        &:hover,
        &:active {
            &::after {
                transform: scaleY(0);
            }
        }

        &.yr-on::after {
            transform: scaleY(1);
        }
    }

    .yr-nav-footer-block {
        margin-top: 2em;
        font-size: 0.8em;
    }

    /**
     * Animation
     */

    @fades: 5;
    
    .yr-nav-panel {
        transition: transform 300ms @ease-slide (@fades * 70ms);
    }

    .fade-loop(@n, @start, @gap) when (@n > 0) {
        .fade-loop((@n - 1), @start, @gap);

        &:nth-child(@n) {
            transition-delay: @start + ((@n - 1) * @gap);
        }
    }

    .yr-nav-fade {
        opacity: 0;
        transition: opacity 200ms @ease-fade;
        .fade-loop(@fades, 0ms, 100ms);
    }


    /**
     * Toggle state
     */

    .yr-nav-toggler:checked + .yr-nav-panel {
        transform: translateX(-100%);
        transition-delay: 0ms;

        .tweak-yr-nav-align-switch & {
            transform: translateX(100%);
        }

        .yr-nav-fade {
            opacity: 1;
            .fade-loop(5, 300ms, 100ms);
        }
    }
}
