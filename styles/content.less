/**
 * Overrides for Squarespace layout contents.
 * Probably volatile, dependent on third party updates.
 */

.sqs-layout {
    overflow: hidden;
}

.yr-main .sqs-layout {
    @mq-collapse: ~'only screen and @{yr-mq-m-dn}';

    .tweak-yr-sqs-alt-grid & {
        .sqs-row,
        .col,
        .sqs-block {
            .display(flex);

            @media @mq-collapse {
                display: block;
            }
        }

        .sqs-row {
            .flex-flow(row wrap);
            .justify-content(stretch);
            .align-items(stretch);
        }

        .col {
            .flex-flow(column nowrap);
            .justify-content(stretch);
            .align-items(stretch);
        }

        .sqs-block {
            .flex-flow(row wrap);
            .justify-content(stretch);
            .align-items(center);

            .tweak-yr-sqs-row-align-up-high & {
                .align-items(flex-start);
            }

            .tweak-yr-sqs-row-align-down-low & {
                .align-items(flex-end);
            }
        }

        .col,
        .sqs-block {
            flex: 1 0 auto;
        }

        .sqs-block-content {
            flex: 1 1 auto;
            max-width: 100%;
        }
    }

    /**
     * Alternating cell colors - kinda works...
     */
    .tweak-yr-sqs-alt-grid.tweak-yr-sqs-cell-alt-show & {
        .sqs-row:nth-child(even) > [class*="sqs-col"]:nth-child(odd) > .sqs-block:nth-child(odd),
        .sqs-row:nth-child(odd) > [class*="sqs-col"]:nth-child(even) > .sqs-block:nth-child(odd),
        .sqs-row:nth-child(odd) > [class*="sqs-col"]:nth-child(odd) > .sqs-block:nth-child(even) {
            background-color: @tweak-yr-sqs-cell-alt-color;
        }

        .newsletter-block .newsletter-form-wrapper {
            background-color: transparent;
        }
    }

    @media @mq-collapse {
        [class*=sqs-col] {
            float: none;
            width: auto;
        }
    }

    .html-block,
    .sqs-block-markdown,
    .sqs-block-quote,
    .sqs-block-archive,
    .sqs-block-summary, [class*="sqs-block-summary"],
    .sqs-block-tagcloud,
    .sqs-block-menu,
    .sqs-block-search,
    .sqs-block-form {
        .sqs-block-content {
            padding: @tweak-yr-sqs-content-space;
        }

        a:not([role="button"]) {
            .yr-a();
        }
    }

    /**
     * These will have the cross-colour border style - crossing between sections.
     */
    .sqs-block-collectionlink {
        position: relative;
        color: @tweak-yr-color-dark-1-tone-2;
        // @todo Set this to be the _other_ element's theme color.
        color: var(--tweak-yr-color-theme-on-tone-2);
        background-color: @tweak-yr-color-base-tone-2;

        .tweak-yr-sqs-content-link-border & {
            background-color: transparent;

            &::before,
            &::after {
                content: '';
                display: block;
                position: absolute;
            }

            .fill(@pad: 0) {
                top: @pad;
                right: @pad;
                left: @pad;
                bottom: @pad;
            }

            &::before {
                @c1: @tweak-yr-color-base-tone-2;
                // @todo Set this to be the _other_ element's theme color.
                @c2: transparent;
                @w: 7px;
                background-image: repeating-linear-gradient(-45deg,
                        @c1 0,
                        @c1 @w,
                        @c2 @w,
                        @c2 (@w * 2));
                z-index: 1;
                .fill(0);
            }

            &::after {
                z-index: 2;
                background-color: @tweak-yr-color-base-tone-2;
                .fill(@tweak-yr-sqs-content-space * @tweak-yr-sqs-content-link-border-cover);
            }

            .sqs-block-content {
            // .collectionlink-content {
                position: relative;
                z-index: 3;
            }
        }

        .sqs-block-content {
        // .collectionlink-content {
            padding: @tweak-yr-sqs-content-space;
        }

        .collectionlink-thumbnail {
            width: 100%;
        }

        a:not(.content-fill) {
            .yr-a();
        }
    }

    .sqs-block-gallery .meta a:not([role="button"]) {
        .yr-a();
    }

    .tweak-yr-sqs-content-full-bleed & {
        .sqs-block {
            padding: 0 !important;
        }

        > .sqs-row {
            margin-left: auto;
            margin-right: auto;
        }
    }

    .sqs-block-image {
        .tweak-yr-sqs-image-block-use-site-fonts & {
            .image-title p {
                .tweak-yr-font-h4 !important;
            }

            .image-subtitle p {
                .tweak-yr-font-p !important;
            }

            .image-caption p {
                .tweak-yr-font-p !important;
                margin: @tweak-yr-sqs-content-space @tweak-yr-pad-space;
            }
        }

        .tweak-yr-sqs-image-block-fixed-font-size & {
            .sqs-dynamic-text,
            .image-title-wrapper,
            .image-subtitle-wrapper {
                font-size: 1em !important;
            }
        }

        .design-layout-poster {
            .image-title,
            .image-subtitle {
                a {
                    .yr-a();

                    &:hover {
                        opacity: 1;
                    }
                }
            }

            .image-subtitle-wrapper {
                .tweak-yr-sqs-image-block-poster-anchor-sub-up-high &,
                .tweak-yr-sqs-image-block-poster-anchor-sub-down-low & {
                    position: absolute;
                    width: inherit;
                }

                .tweak-yr-sqs-image-block-poster-anchor-sub-up-high & {
                    top: @tweak-yr-sqs-content-space;
                }

                .tweak-yr-sqs-image-block-poster-anchor-sub-down-low & {
                    bottom: @tweak-yr-sqs-content-space;
                }
            }
        }
    }

    .sqs-block-quote {
        blockquote {
            /**
             * Squarespace adds actual quote-mark elements...
             * We're already handling this with pseudo-elements, so get rid...
             */
            span {
                &:first-of-type,
                &:last-of-type {
                    display: none;
                }
            }
        }
    }

    .sqs-block-markdown,
    .sqs-block-horizontalrule {
        hr {
            width: auto;
            color: inherit;
            border-bottom: 1px solid currentColor;
            margin: @tweak-yr-p-space 0;
            background: transparent;
        }
    }

    .button-block {
        margin: @tweak-yr-p-space;
    }

    .sqs-gallery {
        .meta {
            padding: 0 @tweak-yr-pad-space;
        }
    }

    .sqs-gallery-block-grid img {
        max-width: none;
    }

    .sqs-gallery-design-strip-slide {
        opacity: 0.75;
        filter: ~'saturate(33%)';
        will-change: opacity, filter;
        .transition(opacity 500ms ease-out,
            filter 500ms ease-out;);

        &:hover,
        &:focus,
        &.sqs-active-slide {
            opacity: 1;
            filter: none;
            .transition(opacity 200ms ease-out,
                filter 200ms ease-out;);
        }
    }

    .newsletter-block .newsletter-form-field-element,
    .sqs-block-search .search-input,
    .form-wrapper .field-list .field .field-element {
        // font-family: inherit;
        background-color: @tweak-yr-color-light-1-tone-2;
        border-color: @tweak-yr-color-light-2-tone-1;

        &:focus {
            background-color: @tweak-yr-color-light-2-tone-2;
        }
    }

    .form-wrapper .field-list .section.underline {
        border: 1px solid @tweak-yr-color-light-2-tone-1;
    }

    .menu-block .menu-selector label {
        opacity: 0.66;
        will-change: opacity;
        .transition(opacity 500ms ease-out);

        &.menu-select-labels--active {
            text-decoration: none;
            opacity: 1;
            .transition(opacity 200ms ease-out);
        }
    }
}
