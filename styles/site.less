*,
*::before,
*::after {
    box-sizing: border-box;
}

html {
    height: 100%;
    overflow-x: hidden;
    .tweak-yr-font-base;

    @m: ~'only screen and @{yr-mq-m-up}';
    @media @m {
        font-size: @tweak-yr-font-base-size-2;
    }
}

body,
.yr-main {
    will-change: background-color;
    .transition(background-color 500ms ease-out);
}

body,
.yr-content {
    display: flex;
    flex-flow: column nowrap;
    justify-content: flex-start;
    align-items: stretch;
    min-height: 100%;
}

body {
    margin: 0 auto;
    background-color: @tweak-yr-color-theme-none-tone-2;
    color: @tweak-yr-color-light-1-tone-3;

    &.homepage {
        background-color: @tweak-yr-color-base-tone-2;
        color: @tweak-yr-color-dark-1-tone-2;
    }

    &.yr-color-theme-1 {
        background-color: @tweak-yr-color-theme-1-tone-2;
    }

    &.yr-color-theme-2 {
        background-color: @tweak-yr-color-theme-2-tone-2;
    }

    &.yr-color-theme-3 {
        background-color: @tweak-yr-color-theme-3-tone-2;
    }

    &.yr-color-theme-4 {
        background-color: @tweak-yr-color-theme-4-tone-2;
    }

    &.yr-color-theme-5 {
        background-color: @tweak-yr-color-theme-5-tone-2;
    }
}

.yr-content,
.yr-main {
    flex: 1 0 auto;
}

p,
blockquote,
pre,
ol,
ul,
figure,
h1,
h2,
h3,
h4,
h5,
h6,
label,
input,
textarea {
    max-width: @tweak-yr-space-line-max;
    margin: auto;
}

p,
blockquote,
pre,
ol,
ul,
figure {
    margin: @tweak-yr-space-p auto;
}

p,
blockquote,
ol,
ul,
figure {
    .tweak-yr-font-p;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    word-break: break-word;
}

h1 {
    /**
     * Has some special exceptions to the rest of the typography.
     */
    /* color: @tweak-yr-color-dark-1-tone-1; */
    .tweak-yr-font-h1;
    padding: @tweak-yr-space-h1 0;
}

h2 {
    /* color: @tweak-yr-color-dark-1-tone-1; */
    .tweak-yr-font-h2;
    padding: @tweak-yr-space-h2 0;
}

h3 {
    /* color: @tweak-yr-color-dark-1-tone-2; */
    .tweak-yr-font-h3;
    padding: @tweak-yr-space-h3 0;
}

h4 {
    /* color: @tweak-yr-color-dark-1-tone-2; */
    .tweak-yr-font-h4;
    padding: @tweak-yr-space-h4 0;
}

h5 {
    /* color: @tweak-yr-color-dark-1-tone-3; */
    .tweak-yr-font-h5;
    padding: @tweak-yr-space-h5 0;
}

h6 {
    /* color: @tweak-yr-color-dark-1-tone-3; */
    .tweak-yr-font-h6;
    padding: @tweak-yr-space-h6 0;
}

a {
    /* color: @tweak-yr-color-dark-1-tone-1; */
    color: inherit;
    cursor: pointer;

    .yr-on-(~'.yr-a'); .-do() {
        .yr-a();
    }
}

b,
strong {
    font-weight: 900;
}

i,
em {
    font-style: italic;
}

q,
blockquote {
    font-style: italic;
    quotes: "“" "”" "‘" "’";

    &::before {
        content: open-quote;
    }

    &::after {
        content: close-quote;
    }
}

blockquote {
    padding: @tweak-yr-space-pad;
    background-color: @tweak-yr-color-overlays-tone-1;
    border-radius: 2px;
}

pre,
code {
    .tweak-yr-font-mono;
    color: @tweak-yr-color-accent-2-tone-3;
    background-color: @tweak-yr-color-dark-1-tone-2;
    border-radius: 2px;
}

pre {
    padding: @tweak-yr-space-pad;
    white-space: pre-wrap;
}

ol,
ul {
    list-style-position: outside;
    padding-left: @tweak-yr-space-pad * 2;
    margin: @tweak-yr-space-p auto;

    &:dir(rtl) {
        padding-left: 0;
        padding-right: @tweak-yr-space-pad * 2;
    }
}

ol {
    list-style-type: decimal;
}

ul {
    list-style-type: disc;
}

li {}

figure {
    margin: @tweak-yr-space-pad auto;
    padding: 4px;
    border-radius: 2px;
    background-color: @tweak-yr-color-overlays-tone-1;
}

figcaption {
    padding: @tweak-yr-space-pad;
}

hr {
    border: none;
    border-bottom: 1px solid currentColor;
    margin: @tweak-yr-space-p auto;
}

small {
    font-size: 0.8em;
}

img,
.yr-inline-svg {
    display: inline-block;
    vertical-align: middle;
}

label {
    cursor: pointer;
}

input,
textarea {
    color: inherit;
    .tweak-yr-font-input;
}

button,
[role="button"] {
    .tweak-yr-font-button;
}

::selection {
    background: @tweak-yr-color-selection;
}

::placeholder {
    color: inherit;
    opacity: 0.66;
}


/**
 * AJAX Loading
 */

[data-ajax-loading] * {
  cursor: progress;
}

.yr-loader {
    position: fixed;
    top: 0;
    left: -100%;
    width: 100%;
    height: @tweak-yr-loader-size;
    z-index: @yr-z-loader;
    pointer-events: none;
    .border-radius(@tweak-yr-loader-size * 0.5);
    border: 1px solid rgba(0, 0, 0, 0.4);
    border-top-width: 0;
    background-color: @tweak-yr-color-accent-2-tone-3;
    opacity: 0;

    .tweak-yr-loader-align-down-low & {
        top: auto;
        bottom: 0;
    }

    will-change: opacity, transform;
    .transition(opacity 500ms ease-out,
        transform 0ms ease-out 500ms;);

    [data-ajax-loading] & {
        opacity: 1;
        .transition(opacity 0ms ease-out,
            transform 500ms ease-out;);
    }

    [data-ajax-loading='start'] & {
        .transform(translateX(33%));
    }

    [data-ajax-loading='swap'] & {
        .transform(translateX(66%));
    }

    [data-ajax-loading='done'] & {
        .transform(translateX(100%));
    }

    // Show or hide

    display: none;

    .tweak-yr-ajax-enable.tweak-yr-loader-show & {
        display: block;
    }
}

.yr-main,
.yr-footer {
    .tweak-yr-loader-animate-content & {
        @time: 400ms;
        @delay: @time * 2;

        &,
        .yr-load-fade,
        .sqs-row,
        .sqs-layout .col,
        .sqs-block {
            will-change: transform, opacity;
            @transition: transform @time @yr-ease-far-out,
                opacity @time @yr-ease-far-out;
            .transition(@transition);

            [data-ajax-loading='start'] &,
            [data-ajax-loading='swap'] &,
            [data-ajax-loading='done'] & {
                opacity: 0;
                .transform(translateY(@tweak-yr-loader-animate-contents-move)
                    scale(@tweak-yr-loader-animate-contents-scale););
                @transition: transform @time @yr-ease-far-in,
                    opacity @time @yr-ease-far-in;
                .transition(@transition);
            }
        }


        /**
         * Random-ish timing offsets.
         */

        // This is how long the child elements have to do their animation.
        [data-ajax-loading='start'] &,
        [data-ajax-loading='swap'] & {
            .transition-delay(@delay);
        }

        // Make sure we fade in from a blank state.
        [data-ajax-loading='done'] & {
            .transition-duration(0ms);
            .transition-delay(0ms);
        }

        &,
        [data-ajax-loading] & {
            .yr-load-fade,
            .sqs-row,
            .sqs-row .col,
            .sqs-block {
                @n: 6;

                .yr-for-(@n); .-each(@i) {
                    .yr-rand(@n + @i);

                    &:nth-child((~'@{n}n+@{i}')) {
                        .transition-delay(floor(@rand * @time));
                    }
                }
            }
        }
    }
}
