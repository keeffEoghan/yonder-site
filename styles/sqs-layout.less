/**
 * Overrides for Squarespace layout blocks.
 * Probably volatile, dependent on third party updates.
 */


.sqs-layout {
    overflow: hidden;


    // Collapse the grid when the screen's too small.

    .yr-fold-cells() {
        display: block !important;
        width: 100% !important;
        float: none;
        clear: both;
    }

    & { .yr-on-(~'.tweak-yr-fold-grid-once'); .-do() {
        @mq-fold: ~'@{yr-mq-pre} and @{yr-mq-fold-grid-dn}';

        @media @mq-fold {
            [class*="sqs-col"] {
                .yr-fold-cells();
            }
        }
    }}

    & { .yr-on-(~'.tweak-yr-fold-grid-many'); .-do() {
        // Recursive collapse to handle grids within grids, to some degree.

        @n-cols: 12;

        @start: @tweak-yr-size-fold-grid-at;
        @dist: @tweak-yr-size-fold-grid-end - @start;

        // Mixin way doesn't work so well, probably due to some mixin variable scoping issue.
        // .yr-for-(@n-cols); .-each(@i) {
        //     .yr-for-(@outer); .-each(@j) {
        //         // `@outer` never changes somehow...
        //     }
        // }

        .for-i(@i) when (@i > 0) {
            .sqs-col-@{i} {
                @factor: (@n-cols - @i) / max(@n-cols - 1, 1);
                @size-i: @start + (@dist * @factor);
                @mq: ~'@{yr-mq-pre} and (max-width: @{size-i})';

                @media @mq {
                    .yr-fold-cells();
                }
            }

            .for-j(@j) when (@j > 0) {
                .sqs-col-@{i} .sqs-col-@{j} {
                    @factor: (@i - @j) / max(@i - 1, 1);
                    @size-j: @start + (@dist * @factor);
                    @mq: ~'@{yr-mq-pre} and (max-width: @{size-j})';

                    @media @mq {
                        .yr-fold-cells();
                    }
                }

                .for-j(@j - 1);
            }
            .for-j(@i);

            .for-i(@i - 1);
        }
        .for-i(@n-cols);
    }}

    .sqs-block {
        position: relative;
        // For obeying float properly.
        overflow: hidden;
    }

    .sqs-block-content {
        position: relative;
        z-index: 2;
    }

    /**
     * Alternate grid system - kinda works...
     */
    & { .yr-on-(~'.tweak-yr-sqs-alt-grid'); .-do() {
        .sqs-row,
        [class*="sqs-col"],
        .sqs-block {
            .display(flex);
        }

        .sqs-row {
            .flex-flow(row wrap);
            .justify-content(stretch);
            .align-items(stretch);
        }

        [class*="sqs-col"] {
            .flex-flow(column nowrap);
            .justify-content(stretch);
            .align-items(stretch);
        }

        .sqs-block {
            .flex-flow(row wrap);
            .justify-content(stretch);
            .align-items(center);

            .tweak-yr-sqs-block-align-up-high & {
                .align-items(flex-start);
            }

            .tweak-yr-sqs-block-align-down-low & {
                .align-items(flex-end);
            }
        }

        [class*="sqs-col"],
        .sqs-block {
            flex: 1 0 auto;
        }

        .sqs-block-content {
            flex: 1 1 auto;
            max-width: 100%;
        }

        /**
         * @todo
         * Need to work around the default float-grid setup.
         * This doesn't work fully, as floats can't happen in a flex setup,
         * and can't switch flex direction (column -> row) in the same flex container.
         */
        .sqs-block[class*=float-right] {
            align-self: flex-end;
        }
    }}


    /**
     * Alternating cell colors - kinda works...
     */
    .yr-main &,
    &.yr-alt-block-color {
        .sqs-row {
            .yr-on-(~'.tweak-yr-sqs-alt-grid.tweak-yr-sqs-block-alt-show'); .-do() {
                &:nth-child(even) > [class*="sqs-col"]:nth-child(odd) > .sqs-block:nth-child(odd),
                &:nth-child(odd) > [class*="sqs-col"]:nth-child(even) > .sqs-block:nth-child(odd),
                &:nth-child(odd) > [class*="sqs-col"]:nth-child(odd) > .sqs-block:nth-child(even) {
                    &::before {
                        content: '';
                        display: block;
                        position: absolute;
                        top: 0;
                        right: 0;
                        left: 0;
                        bottom: 0;
                        background-color: @tweak-yr-sqs-block-alt-color;
                        z-index: 0;
                    }
                }

                .sqs-block-horizontalrule,
                .sqs-block-spacer {
                    &::before {
                        visibility: hidden;
                    }
                }
            }
        }
    }

    .yr-on-(~'.yr-no-alt-block-color'); .-do() {
        .sqs-block {
            &::before {
                visibility: hidden;
            }
        }
    }

    .tweak-yr-sqs-content-full-bleed & {
        .sqs-block {
            padding: 0 !important;
            margin: 0 !important;
        }

        > .sqs-row {
            margin-left: auto;
            margin-right: auto;
        }
    }

    .sqs-block-html,
    .sqs-block-markdown,
    .sqs-block-quote,
    .sqs-block-archive,
    .sqs-block-summary,
    [class*="sqs-block-summary"],
    .sqs-block-calendar,
    .sqs-block-tagcloud,
    .sqs-block-menu,
    .sqs-block-search,
    .sqs-block-form {
        .sqs-block-content {
            padding: @tweak-yr-space-content;
        }

        a:not([role="button"]) {
            .yr-a();
        }
    }

    .sqs-block-collectionlink,
    .link-block {
        .collectionlink-thumbnail {
            width: 100%;
            height: auto;

            img {
                width: 100% !important;
                height: auto !important;
                top: 0 !important;
                bottom: auto !important;
                left: 0 !important;
                right: 0 !important;
            }
        }

        .collectionlink-title {
            text-align: center;
        }

        a:not(.content-fill) {
            .yr-a();
        }
    }

    .sqs-block-newsletter {
        a:not([role="button"]) {
            .yr-a();
        }
    }

    .sqs-block-button {
        .sqs-block-content {
            padding: @tweak-yr-space-content;
        }
    }


    /**
     * Apply block styles.
     */

     .style-block(@block) {
        // Base

        & { .yr-on-(~'.tweak-yr-@{block}-style-base-normal'); .-do() {}}

        & { .yr-on-(~'.tweak-yr-@{block}-style-base-dark'); .-do() {
            .style-block-dark();
        }}

        & { .yr-on-(~'.tweak-yr-@{block}-style-base-light'); .-do() {
            .style-block-light();
        }}

        & { .yr-on-(~'.tweak-yr-@{block}-style-base-stripes'); .-do() {
            .style-block-stripes();
        }}

        & { .yr-on-(~'.tweak-yr-@{block}-style-base-stripes.tweak-yr-block-style-base-stripes-sticky'); .-do() {
            .style-block-stripes-sticky();
        }}


        // Color

        & { .yr-on-(~'.tweak-yr-@{block}-style-color-normal'); .-do() {}}

        & { .yr-on-(~'.tweak-yr-@{block}-style-color-theme'); .-do() {
            .style-block-color-theme();
        }}
    }

    /**
     * Block types whose styles can be configured.
     * @see The corresponding tweaks - `tweak-yr-@{block}-style-@{base|color}`
     */
    @blocks: ~'sqs-block',
        ~'sqs-block-html',
        ~'sqs-block-markdown',
        ~'sqs-block-quote',
        ~'sqs-block-newsletter',
        ~'sqs-block-archive',
        ~'sqs-block-summary',
        ~'sqs-block-calendar',
        ~'sqs-block-tagcloud',
        ~'sqs-block-menu',
        ~'sqs-block-search',
        ~'sqs-block-form',
        ~'sqs-block-collectionlink',
        ~'sqs-block-gallery',
        ~'sqs-block-button',
        ~'sqs-block-horizontalrule',
        ~'sqs-block-chart',
        ~'sqs-block-image',
        ~'sqs-block-video',
        ~'sqs-block-audio',
        ~'sqs-block-embed';

    .yr-for-(length(@blocks)); .-each(@i) {
        @block: extract(@blocks, @i);
        @select: ~'.@{block}';

        @{select} {
            .style-block(@block);
        }
    }

    // Special case, as it doesn't currently have a straightforward class name.
    [class*="sqs-block-summary"] {
        .style-block(~'sqs-block-summary');
    }

    .sqs-block-gallery .meta a:not([role="button"]) {
        .yr-a();
    }


    /**
     * Often used as a header banner.
     */
    .sqs-block-image {
        & { .yr-on-(~'.tweak-yr-sqs-image-block-use-site-fonts'); .-do() {
            p {
                display: block !important;
            }

            .image-title p {
                .tweak-yr-font-h4 !important;
            }

            .image-subtitle p {
                .tweak-yr-font-p !important;
            }

            .image-caption p {
                .tweak-yr-font-p !important;
                padding: @tweak-yr-space-content @tweak-yr-space-pad;
            }
        }}

        .tweak-yr-sqs-image-block-fixed-font-size & {
            .sqs-dynamic-text,
            .image-title-wrapper,
            .image-subtitle-wrapper {
                font-size: 1em !important;
            }
        }

        .design-layout-poster {
            .image-card {
                width: auto;
            }

            .image-title,
            .image-subtitle {
                a {
                    .yr-a();

                    &:hover {
                        opacity: 1;
                    }
                }
            }

            .image-subtitle-wrapper {
                .tweak-yr-sqs-image-block-poster-anchor-sub-down-low &,
                .tweak-yr-sqs-image-block-poster-anchor-sub-up-high & {
                    position: absolute;
                    width: 100%;
                }

                .tweak-yr-sqs-image-block-poster-anchor-sub-up-high & {
                    top: @tweak-yr-space-content;
                }

                .tweak-yr-sqs-image-block-poster-anchor-sub-down-low & {
                    bottom: @tweak-yr-space-content;
                }
            }
        }
    }

    .sqs-block-quote {
        figure {
            margin: @tweak-yr-space-p auto;
        }

        blockquote {
            /**
             * Squarespace adds actual quote-mark elements...
             * We're already handling this with pseudo-elements, so get rid...
             */
            span {
                &:first-of-type,
                &:last-of-type {
                    display: none;
                }
            }
        }
    }

    .sqs-block-markdown,
    .sqs-block-horizontalrule {
        hr {
            width: auto;
            color: inherit;
            border-bottom: 1px solid currentColor;
            margin: @tweak-yr-space-p 0;
            background: transparent;
        }
    }

    .button-block {
        margin: @tweak-yr-space-p;
    }

    .sqs-gallery .meta {
        padding: 0 @tweak-yr-space-pad;
    }

    .sqs-gallery-block-grid {
        padding: @tweak-yr-space-pad;

        img {
            max-width: none;
        }
    }

    .sqs-gallery-design-strip-slide {
        opacity: 0.66;
        will-change: opacity;
        .transition(opacity 500ms ease-out);

        &:hover,
        &:focus,
        &.sqs-active-slide {
            opacity: 1;
            .transition(opacity 200ms ease-out);
        }
    }

    .newsletter-block .newsletter-form-field-element,
    .form-wrapper .field-list .field .field-element {
        border-color: @tweak-yr-color-light-2-tone-1;
        background-color: @tweak-yr-color-light-1-tone-3;
        color: @tweak-yr-color-dark-1-tone-1;
        .tweak-yr-font-input;

        &:focus {
            background-color: @tweak-yr-color-light-2-tone-2;
        }
    }

    .newsletter-block {
        .newsletter-form-header,
        .newsletter-form-footnote p {
            max-width: @tweak-yr-space-line-max;
            margin-left: auto;
            margin-right: auto;
        }

        .submit-wrapper {
            .tweak-yr-font-button;
        }

    }

    .sqs-block-search {
        border-color: @tweak-yr-color-light-2-tone-1;

        .color-dark .search-input {
            border-color: @tweak-yr-color-dark-2-tone-1;
        }
    }

    .form-wrapper .field-list .section.underline {
        border-color: @tweak-yr-color-light-2-tone-1;
    }

    .menu-block .menu-selector label {
        opacity: 0.66;
        will-change: opacity;
        .transition(opacity 500ms ease-out);

        &:hover,
        &:focus,
        &.menu-select-labels--active {
            text-decoration: none;
            opacity: 1;
            .transition(opacity 200ms ease-out);
        }
    }

    .sqs-block-archive .archive-block-wrapper {
        margin: auto;
    }

    .sqs-block-tagcloud .sqs-tagcloud {
        text-align: center;
        max-width: none;
    }

    [class*="sqs-block-socialaccountlinks"] a {
        // Override any fancy link stuff
        border: none !important;
    }
}
